# -*- coding:utf-8 -*-
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
class Solution:
    
    def DoesTree1HaveTree2(self,pRoot1,pRoot2):
        if not pRoot2:
            return True
        
        if not pRoot1:
            return False
        
        #先序遍历
        if pRoot1.val!= pRoot2.val:
            return False
        
        return self.DoesTree1HaveTree2(pRoot1.left,pRoot2.left) and self.DoesTree1HaveTree2(pRoot1.right,pRoot2.right)
        
    
    def HasSubtree(self, pRoot1, pRoot2):
        # write code here
        #先序遍历找到值相等的结点，然后再判断是不是子树相等
        result = False
        
        if pRoot1 and pRoot2:
            if pRoot1.val == pRoot2.val:
                result = self.DoesTree1HaveTree2(pRoot1,pRoot2)
            if not result:   
                #原来的错误就是在这两个地方缺少了一个result作为返回，需要接收左右子树遍历结果
                result = self.HasSubtree(pRoot1.left,pRoot2)

            if not result:
                result = self.HasSubtree(pRoot1.right,pRoot2)
                
        return result
        
            
